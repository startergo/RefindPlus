#
# config.conf
# Configuration file for the RefindPlus boot menu
#

##--------------------------------------------------------------##
##               ADDITIONAL CONFIGURATION ITEMS                 ##
##         Features Provided or Extended by RefindPlus          ##
##--------------------------------------------------------------##
#
#
# Set the CSR values for Apple's System Integrity Protection (SIP) feature.
# Values are hexadecimal numbers that define which specific security features
# are enabled. Below are the codes for what the values mean. Add them up (in hex)
# to set new values. Apple's "csrutil enable" and "csrutil disable" commands typically
# set values of 10 (ON) and 77 (OFF) respectively. Note that 77 is just a default "OFF"
# setting and that you can go beyond this, to values such as 87F, 97F ... up to FFF, to
# further open up SIP. This may be useful in running/installing Mac OS v11.0 (Big Sur),
# or later, on unsupported Macs but should be used with caution.
#   CSR_ALLOW_UNTRUSTED_KEXTS            0x001
#   CSR_ALLOW_UNRESTRICTED_FS            0x002
#   CSR_ALLOW_TASK_FOR_PID               0x004
#   CSR_ALLOW_KERNEL_DEBUGGER            0x008
#   CSR_ALLOW_APPLE_INTERNAL             0x010
#   CSR_ALLOW_UNRESTRICTED_DTRACE        0x020
#   CSR_ALLOW_UNRESTRICTED_NVRAM         0x040
#   CSR_ALLOW_DEVICE_CONFIGURATION       0x080
#   CSR_ALLOW_ANY_RECOVERY_OS            0x100
#   CSR_ALLOW_UNAPPROVED_KEXTS           0x200
#   CSR_ALLOW_EXECUTABLE_POLICY_OVERRIDE 0x400
#   CSR_ALLOW_UNAUTHENTICATED_ROOT       0x800
#
# Inactive when commented out (CSR values for SIP cannot be set)
#
#csr_values 10,77

# While using NVRAM works with most computers, this increases wear
# and tear on the motherboard's NVRAM. In situations where the NVRAM is
# old and worn out, it may not work and may lead to an inability to boot.
# Storing variables on disk is a viable alternative and RefindPlus can save
# its variables to the "vars" subdirectory of the RefindPlus directory on disk.
# However, this will not work if RefindPlus is on a filesystem that is read-only
# to the EFI (e.g. HFS+ volumes), and it may also increase the risk of filesystem
# damage. Note that this option ONLY applies to RefindPlus variables such as the
# PreviousBoot, HiddenTags, HiddenTools, and HiddenLegacy variables. It does NOT
# apply to any non-RefindPlus variables which will always be written to NVRAM.
#
# Stores RefindPlus variables in the "vars" subdirectory when commented out
#
#use_nvram

# The SimpleText protocol on the ConsoleOut handle is normally used to
# output text. On Macs and some other firmware, this is complicated by
# the ConsoleControl protocol which determines whether to output text,
# graphics, or both, and this often results in an inability to display
# text or run tools such as shell.efi that require text output. A text
# renderer is added on top of GOP by this option as a workaround.
# NB: This setting is forced on whenever text output is required, such
# as when running EFI Shell or whenever RefindPlus is changed to text
# mode as part of its operations (Typically to handle errors).
#
# Inactive when commented out (Does not use a custom text renderer)
#
#text_renderer

# Add UGA Protocol to GOP when absent. This primarily works to permit
# booting older Operating Systems running EFIBoot Protocols.
#
# Inactive when commented out (Does not add UGA to GOP)
#
#uga_pass_through

# Some computers may have multiple GOP instances:
#     - One installed on the ConsoleOut handle
#     - Others installed on GPU handles.
# GOP on the ConsoleOut Handle is what everything uses and is provided by
# the system firmware and others provided by GPU firmware. The firmware
# should typically forward calls from the ConsoleOut Handle GOP to the
# others transparently. On such models, it only works in this way with
# GPUs with system firmware support. This option replaces GOP on the
# ConsoleOut Handle with one from a GPU Handle on such models when
# running compatible GPUs without system firmware support.
#
# Inactive when commented out (Does not provide ConsoleOut GOP)
#
#provide_console_gop

# Use a built-in GOP renderer which may provide better performance
# and fix rendering issues on some GPU/firmware combinations such as
# the Radeon VII and some versions of the Radeon 5700 XT. However,
# this should only be used when there is an obvious benefit as it
# may result in glitches in the pre-boot configuration screen or
# slow scrolling response after booting into the operating system.
#
# Inactive when commented out (Does not use the built-in GOP)
#
#direct_gop_renderer

# Proceed automatically when notices are shown on-screen instead
# of having to press a key to continue. When this option is active,
# RefindPlus will pause for three seconds when on-screen warnings
# are shown and then proceed as if a key had been pressed.
#
# Inactive when commented out (Does not proceed automatically)
#
#continue_on_warning

# Enable 'TRIM' on non-Apple SSDs. 'TRIM', which can improve SSD health,
# is not enabled by default on non-Apple SSDs in Mac OS. When this option
# is active, RefindPlus will switch 'TRIM' on in Mac OS for all SSDs
# including non-Apple SSDs. This setting only applies to Mac OS.
# NB: Enabling 'TRIM' can significantly increase boot times.
#
# Inactive when commented out (Does not enable 'TRIM')
#
#trim_force

# Disable Mac OS compatibility check when booting. Macs check whether the
# current Mac OS version is supported on the machine when booting and halts
# if not. When this option is active, RefindPlus will set the "-no_compat_check"
# boot argument which disables this check and allows boot to proceed on otherwise
# unsupported Macs. This setting only applies to Mac OS. Note that this setting will
# create a Mac OS boot argument the first time it is triggered and that this will stay
# active until explicitly cleared even if the setting is subsequently disabled.
#
# Inactive when commented out (Does not disable the compatibility check)
#
#disable_mac_compat_check

# Disable Apple Mobile File Integrity (AMFI) checks. When this option is active,
# RefindPlus will set the "amfi_get_out_of_my_way=1" boot argument which along with
# System Integrity Protection (SIP), restricts access to entitlements by applications.
# This setting only applies to Mac OS. Note that this setting will create a Mac OS
# boot argument the first time it is triggered and that this will stay active
# until explicitly cleared even if the setting is subsequently disabled.
#
# Inactive when commented out (Does not disable AMFI checks)
#
#disable_amfi

# Supply APFS filesystem capability. When this option is active, RefindPlus will load
# Mac OS APFS filesystem drivers, apfs.efi, which are available in system folders of
# Mac OS 10.13 (High Sierra) and later. The drivers are loaded to match each specific
# Mac OS version and this ensures that changes made by Apple to the drivers for different
# Mac OS versions are accounted for as compared to loading a single APFS driver for every
# Mac OS versions in use. This setting only applies to Mac OS.
#
# Inactive when commented out (Does not supply APFS filesystem capability)
#
#supply_apfs

# Suppress verbose APFS loading text output. When this option is active, RefindPlus will
# suppress verbose text output from the APFS drivers loaded using the 'supply_apfs' option.
# This option only acts on apfs drivers loaded by RefindPlus using 'supply_apfs'.
# This option may impact other text output and should be disabled if such
# effects are observed. This setting only applies to Mac OS.
#
# Inactive when commented out (Does not suppress verbose APFS text)
#
#suppress_verbose_apfs

# Apple has partially enforced the use of the Pre-Boot Loader stored in the "PreBoot" partitions
# of APFS volumes by requiring this to run the Mac OS Boot Loader in Mac OS v11.0 (Big Sur) when
# SIP is enabled. Attempts to run the Mac OS 11.0 Boot Loader directly result in kernel panics
# when SIP enabled. When this option is activated, RefindPlus will map Mac OS APFS volumes to
# their respective "PreBoot" partitions which will be used to boot such Mac OS Instances and
# the "PreBoot" partitions will be hidden from view. This feature also facilitates directly
# booting FileVault encrypted volumes instead of requiring their "PreBoot" partitions.
# NB: This is an experimental feature and it is still a work in progress.
#
# Inactive when commented out (Does not enforce APFS requirements)
#
#enforce_apfs

# Prevent UEFI Windows 'Secure Boot' from writing to Apple NVRAM. When this option is active,
# RefindPlus will prevent UEFI Windows Secure Boot from writing to the NVRAM on Apple Firmware
# as this can lead to damage resulting in an inability to boot. Legacy Windows does not have
# this issue and is recommended when running Windows on Apple Firmware.
# This setting only applies when loading Windows on Apple Firmware.
#
# Inactive when commented out (Does not prevent UEFI Windows writes to Apple NVRAM)
#
#protect_mac_nvram

# Allow scans of volumes with duplicate UUIDs. When this option is active, RefindPlus
# will make volumes with duplicate UUIDs available for scanning for kernels and loaders.
# This would however typically result in multiple loaders displayed on the main screen and
# this option should only be activated for specific configurations that require scanning of
# duplicates. Specifically, this should NOT be enabled when loaders exist on RAID Arrays.
#
# Inactive when commented out (Does not make volumes with duplicate UUIDs available)
#
#allow_duplicates

# RefindPlus will automatically enlarge icons and text when HiDPI screens are detected.
# The detection is basic and based on detecting a minimum 1601px vertical resolution.
# This setting allows overriding the detection as follows:
#  -1    - Never scale UI elements up
#   0    - Scale UI elements up, or not, based on screen vertical resolution
#   1    - Always scale UI elements up
#
# The default setting is 0 (Scales UI elements based on screen resolution)
#
#scale_ui 1

# Set arbitrary boot arguments on Mac OS. When this option is active,
# RefindPlus will change the boot arguments in Mac OS to the specified string.
# This setting only applies to Mac OS and accounts for arguments injected by
# 'disable_amfi' and 'disable_mac_compat_check' as required. Note that this
# setting will create a Mac OS boot argument the first time it is triggered
# and that this will stay active until explicitly cleared even if the
# setting is subsequently disabled.
#
# Inactive when commented out (Does not change boot arguments)
#
#set_mac_boot_args "-v"


##--------------------------------------------------------------##
##                STANDARD CONFIGURATION ITEMS                  ##
##                  Standard rEFInd Features                    ##
##--------------------------------------------------------------##
#
#
# Timeout in seconds for the main menu screen. Setting the timeout to 0
# disables automatic booting (i.e., no timeout). Setting it to -1 causes
# an immediate boot to the default OS *UNLESS* a keypress is in the buffer
# when RefindPlus launches, in which case that keypress is interpreted as a
# shortcut key. If no matching shortcut is found, RefindPlus displays its
# menu with no timeout.
#
# The default setting is 0 (No timeout)
#
timeout 20

# Normally, when the timeout period has passed, RefindPlus boots the
# default_selection. If the following option is uncommented, though,
# RefindPlus will instead attempt to shut down the computer.
# CAUTION: MANY COMPUTERS WILL INSTEAD HANG OR REBOOT! Macs and more
# recent UEFI-based PCs are most likely to work with this feature.
#
# The default setting is to boot the default selection
#
#shutdown_after_timeout

# Blank screen and show different solid colours after the specified
# number of seconds without input. Screen returns after most keypresses
# (Excluding modifier keys such as Shift, Control, Alt, and Option).
# "-1" causes RefindPlus to start up with the screensaver active.
#
# The default setting is to disable the screensaver
#
#screensaver 300

# Hide user interface elements for personal preference or for security:
#  banner      - the RefindPlus title banner (built-in or loaded via "banner")
#  label       - boot option text label in the menu
#  singleuser  - remove the submenu options to boot Mac OS in single-user
#                or verbose modes; affects ONLY Mac OS
#  safemode    - remove the submenu option to boot Mac OS in "safe mode"
#  hwtest      - the submenu option to run Apple's hardware test
#  arrows      - scroll arrows on the OS selection tag line
#  hints       - brief command summary in the menu
#  editor      - the options editor (+, F2, or Insert on boot options menu)
#  badges      - device-type badges for boot options
#  all         - all of the above
#
# The default setting is none of these (All elements are active)
#
#hideui singleuser
#hideui all

# Set the name of a subdirectory in which icons are stored. Icons must
# have the same names they have in the standard directory. The directory
# name is specified relative to the main RefindPlus binary's directory. If
# an icon cannot be found in the specified directory, an attempt is made
# to load it from the default directory; thus, you can replace just some
# icons in your own directory and rely on the default for others.
# Icon files may be in any supported format -- ICNS (*.icns), BMP (*.bmp),
# PNG (*.png), or JPEG (*.jpg or *.jpeg); however, RefindPlus' BMP and JPEG
# implementations do not support transparency, which is highly desirable
# in icons.
#
# The default setting is to load icons from the "icons" folder
#
#icons_dir myicons
#icons_dir icons/snowy

# Use a custom title banner instead of the RefindPlus icon and name. The file
# path is relative to the directory where the RefindPlus efi file is located.
# The colour in the top left corner of the image is used as the background
# colour for the menu screens. Currently uncompressed BMP images with colour
# depths of 24, 8, 4 or 1 bits are supported, as well as PNG and JPG images.
# (ICNS images can also be used, but ICNS has limitations that make it a poor
# choice for this purpose.) PNG and JPG support is limited by the underlying
# libraries; some files, such as progressive JPGs, will not work.
#
# The default setting is to use the embedded title banner
#
#banner hostname.bmp
#banner mybanner.jpg
#banner icons/snowy/banner-snowy.png

# How to handle banners that are not the same size as the screen size:
#  noscale     - Crop if too big or show with border if too small
#  fillscreen  - Fill the screen
#
# Crops if too big or shows with border if too small when commented out
#
#banner_scale fillscreen

# Icon sizes. All icons are square, so just one value is specified. The
# big icons are used for OS selectors in the first row and the small
# icons are used for tools on the second row. Drive-type badges are 1/4
# the size of the big icons. Legal values are 32 and above. If the icon
# files do not hold icons of the proper size, the icons are scaled to
# the specified size.
#
# Uses 48 and 128 for small and big icons respectively when commented out
#
#small_icon_size 96
#big_icon_size 256

# Custom images for the selection background. There is a big one (144 x 144)
# for the OS icons, and a small one (64 x 64) for the function icons in the
# second row. If only a small image is given, that one is also used for
# the big icons by stretching it in the middle. If only a big one is given,
# the built-in default will be used for the small icons. If an image other
# than the optimal size is specified, it will be scaled in a way that may
# be ugly.
#
# Like the banner option above, these options take a filename of an
# uncompressed BMP, PNG, JPEG, or ICNS image file with a color depth of
# 24, 8, 4, or 1 bits. The PNG or ICNS format is required if you need
# transparency support (to let you "see through" to a full-screen banner).
#
#selection_big   selection-big.bmp
#selection_small selection-small.bmp

# Set the font to be used for all textual displays in graphics mode.
# For best results, the font must be a PNG file with alpha channel
# transparency. It must contain ASCII characters 32-126 (space through
# tilde), inclusive, plus a glyph to be displayed in place of characters
# outside of this range, for a total of 96 glyphs. Only monospaced fonts
# are supported. Fonts may be of any size, although large fonts can
# produce display irregularities.
#
# Uses the built-in font (Luxi Mono Regular 12 point) when commented out
#
#font myfont.png

# Use text mode only. When enabled, this option forces RefindPlus into
# text mode. Graphic mode is used otherwise.
#
# Uses graphics mode when commented out
#
#textonly

# Set the EFI text mode to be used for textual displays. This option
# takes a single digit that refers to a mode number. Mode 0 is normally
# 80x25, 1 is sometimes 80x50, and higher numbers are system-specific
# modes. Mode 1024 is a special code that tells RefindPlus to not set the
# text mode; it uses whatever was in use when the program was launched.
# If you specify an invalid mode, RefindPlus pauses during boot to inform
# you of valid modes.
#
# CAUTION: On VirtualBox, and perhaps on some real computers, specifying
# a text mode and uncommenting the "textonly" option while NOT specifying
# a resolution can result in an unusable display in the booted OS.
#
# Uses 1024 when commented out
#
#textmode 2

# Set the screen's video resolution. Pass this option either:
#  * two values, corresponding to the X and Y resolutions
#  * one value, corresponding to a GOP (UEFI) video mode
# Note that not all resolutions are supported. On UEFI systems, passing
# an incorrect value results in a message being shown on the screen to
# that effect, along with a list of supported modes. On EFI 1.x systems
# (e.g., Macintoshes), setting an incorrect mode silently fails. On both
# types of systems, setting an incorrect resolution results in the default
# resolution being used. A resolution of 1024x768 usually works, but higher
# values often do not.
#
# Uses the system default, usually 800x600, when commented out
#
#resolution 1024 768
#resolution 1440 900
#resolution 3

# Enable touch screen support. If active, this feature enables use of
# touch screen controls (as on tablets). Note, however, that not all
# tablets' EFIs provide the necessary underlying support, so this
# feature may not work for you. If it does work, you should be able
# to launch an OS or tool by touching it. In a submenu, touching
# anywhere launches the currently-selection item; there is, at present,
# no way to select a specific submenu item. This feature is mutually
# exclusive with the enable_mouse feature. If both are uncommented,
# the one read most recently takes precedence.
#
# Inactive when commented out (Does not enable touch screen support)
#
#enable_touch

# Enable mouse support. If active, this feature enables use of the
# computer's mouse. Note, however, that not all computers' EFIs
# provide the necessary underlying support, so this feature may not
# work for you. If it does work, you should be able to launch an
# OS or tool by clicking it with the mouse pointer. This feature
# is mutually exclusive with the enable_touch feature. If both
# are uncommented, the one read most recently takes precedence.
#
# Inactive when commented out (Does not enable mouse support)
#
#enable_mouse

# Size of the mouse pointer, in pixels, per side.
#
# The default setting is 16
#
#mouse_size 18

# Speed of mouse tracking. Higher numbers equate to faster
# mouse movement. This option requires that enable_mouse be
# uncommented. Legal values are between 1 and 32.
#
# The default setting is 4
#
#mouse_speed 4

# Launch specified operating system in graphics mode. RefindPlus defaults
# to text mode and displays basic pre-launch information when launching
# any operating systems except Mac OS. Using graphics mode can provide
# a more seamless transition, but displays no information, which can
# make it difficult to debug problems. Also, on at least one known
# computer, using graphics mode prevents a crash when using the Linux
# kernel's EFI stub loader. You can specify an empty list to boot all
# operating systems in text mode.
# Valid options:
#   osx     - Mac OS
#   linux   - A Linux kernel with EFI stub loader
#   elilo   - The ELILO boot loader
#   grub    - The GRUB (Legacy or 2) boot loader
#   windows - Microsoft Windows
#
# Uses osx (Launches Mac OS in graphics mode) when commented out
#
#use_graphics_for osx,linux

# Which non-bootloader tools to show on the tools line, and in what
# order to display them:
#  shell            - UEFI/EFI Shell. (External program; see documentation)
#  memtest          - Memory Testing Utility. (External program; memtest86)
#  gptsync          - the (dangerous) gptsync.efi utility (requires external
#                     program; see RefindPlus documentation for details)
#  gdisk            - the gdisk partitioning program
#  show_bootscreen  - Load Apple Boot Screen if available. (External program)
#                     Needs GOP-Compatible Fully Compatible GPU on Apple Firmware.
#                     'Fully Compatible GPUs' are those with native Apple Boot Screen
#  clean_nvram      - Reset NVRAM from Refind. (External program)
#                     Requires Apple Firmware.
#  apple_recovery   - boots the Apple Recovery HD partition, if present
#  windows_recovery - boots an OEM Windows recovery tool, if present
#                     (see also the windows_recovery_files option)
#  mok_tool         - makes available the Machine Owner Key (MOK) maintenance
#                     tool, MokManager.efi, used on Secure Boot systems
#  csr_rotate       - adjusts Apple System Integrity Protection (SIP)
#                     policy. Requires "csr_values" to be set.
#  install          - an option to install RefindPlus from the current location
#                     to another ESP
#  bootorder        - adjust the EFI's (NOT RefindPlus') boot order
#  about            - an "about this program" option
#  hidden_tags      - manage hidden tags
#  exit             - a tag to exit from RefindPlus
#  shutdown         - shuts down the computer (a bug causes this to reboot
#                     many UEFI systems)
#  reboot           - a tag to reboot the computer
#  firmware         - a tag to reboot the computer into the firmware's
#                     user interface (ignored on older computers)
#  fwupdate         - a tag to update the firmware; launches the fwupx64.efi
#                     (or similar) program
#  netboot          - launch the ipxe.efi tool for network (PXE) booting
#
# The default setting is shell,memtest,gdisk,apple_recovery,windows_recovery,mok_tool,about,hidden_tags,shutdown,reboot,firmware,fwupdate
#
#showtools shell, bootorder, gdisk, memtest, mok_tool, apple_recovery, windows_recovery, about, hidden_tags, reboot, exit, firmware, fwupdate

# Tool binaries to be excluded from the tools line, even if the
# general class is specified in showtools. This enables trimming an
# overabundance of tools, as when you see multiple mok_tool entries
# after installing multiple Linux distributions.
# Just as with dont_scan_files, you can specify a filename alone, a
# full pathname, or a volume identifier (filesystem label, partition
# name, or partition GUID) and a full pathname.
#
# Has an empty list (nothing is excluded) when commented out
#
#dont_scan_tools ESP2:/EFI/ubuntu/mmx64.efi,gptsync_x64.efi

# Boot loaders that can launch a Windows restore or emergency system.
# These tend to be OEM-specific.
#
# The default setting is LRS_ESP:/EFI/Microsoft/Boot/LrsBootmgr.efi
#
#windows_recovery_files LRS_ESP:/EFI/Microsoft/Boot/LrsBootmgr.efi

# Directories in which to search for EFI drivers. These drivers can
# provide filesystem support, give access to hard disks on plug-in
# controllers, etc. In most cases none are needed, but if you add
# EFI drivers and you want RefindPlus to automatically load them, you
# should specify one or more paths here. RefindPlus always scans the
# "drivers" and "drivers_{arch}" subdirectories of its own installation
# directory (where "{arch}" is your architecture code); this option
# specifies ADDITIONAL directories to scan.
#
# Inactive when commented out (Does not scan additional directories)
#
#scan_driver_dirs EFI/tools/drivers,drivers

# Which types of boot loaders to search, and in what order to display them:
#  internal      - internal EFI disk-based boot loaders
#  external      - external EFI disk-based boot loaders
#  optical       - EFI optical discs (CD, DVD, etc.)
#  netboot       - EFI network (PXE) boot options
#  hdbios        - BIOS disk-based boot loaders
#  biosexternal  - BIOS external boot loaders (USB, eSATA, etc.)
#  cd            - BIOS optical-disc boot loaders
#  manual        - use stanzas later in this configuration file
# Note that the legacy BIOS options require firmware support, which is
# not present on all computers.
# The netboot option is experimental and relies on the ipxe.efi and
# ipxe_discover.efi program files.
#
# On UEFI PCs, the default setting is internal,external,optical,manual
# On Macs, the default setting is internal,hdbios,external,biosexternal,optical,cd,manual
#
#scanfor internal,external,optical,manual

# By default, RefindPlus relies on the UEFI firmware to detect BIOS-mode boot
# devices. However, this sometimes does not detect all the available devices.
# For these cases, uefi_deep_legacy_scan results in a forced scan and
# modification of NVRAM variables on each boot. This option has no effect on
# Macs or when no BIOS-mode options are set via scanfor.
#
# Inactive when commented out (Does not result in a forced scan)
#
#uefi_deep_legacy_scan

# Delay for the specified number of seconds before scanning disks.
# This can help some users who find that some of their disks
# (usually external or optical discs) are not detected initially,
# but are detected after pressing Esc.
#
# The default setting is 0
#
#scan_delay 5

# When scanning volumes for EFI boot loaders, RefindPlus always looks for
# Mac OS' and Microsoft Windows' boot loaders in their normal locations,
# and scans the root directory and every subdirectory of the /EFI directory
# for additional boot loaders, but it does not recurse into these directories.
# The also_scan_dirs option adds more directories to the scan list.
# Directories are specified relative to the volume's root directory. This
# option applies to ALL the volumes that RefindPlus scans UNLESS you include
# a volume name and colon before the directory name, as in "myvol:/somedir"
# to scan the somedir directory only on the filesystem named myvol. If a
# specified directory does not exist, it is ignored (no error condition
# results).
#
# Scans the "boot" directory and hardcoded directories when commented out
#
#also_scan_dirs boot,ESP2:EFI/linux/kernels

# Partitions (or whole disks, for legacy-mode boots) to omit from scans.
# For EFI-mode scans, you normally specify a volume by its label, which you
# can obtain in an EFI shell by typing "vol", from Linux by typing
# "blkid /dev/{devicename}", or by examining the disk's label in various
# operating systems' file browsers. It is also possible to identify partitions
# by their unique GUIDs (aka its "PARTUUID" in Linux parlance). (Note that this
# is NOT the partition TYPE CODE GUID.) This identifier can be obtained via
# "blkid" in Linux or "diskutil info {partition-id}" in Mac OS.
# For legacy-mode scans, you can specify any subset of the boot loader
# description shown when you highlight the option in RefindPlus.
#
# Set to LRS_ESP when commented out
#
#dont_scan_volumes "Recovery HD"

# Directories that should NOT be scanned for boot loaders. By default,
# RefindPlus does not scan its own directory, the EFI/tools directory, the
# EFI/memtest directory, the EFI/memtest86 directory, or the
# com.apple.recovery.boot directory. Using the dont_scan_dirs option
# enables you to "blacklist" other directories; but be sure to use "+"
# as the first element if you want to continue blacklisting existing
# directories. You might use this option to keep EFI/boot/bootx64.efi out
# of the menu if that is a duplicate of another boot loader or to exclude
# a directory that holds drivers or non-bootloader utilities provided by
# a hardware manufacturer. If a directory is listed both here and in
# also_scan_dirs, dont_scan_dirs takes precedence. Note that this
# blacklist applies to ALL the filesystems that RefindPlus scans, not just
# the ESP, unless you precede the directory name by a filesystem name or
# partition unique GUID, as in "myvol:EFI/somedir" to exclude EFI/somedir
# from the scan on the myvol volume but not on other volumes.
#
# Inactive when commented out (Does not exclude additional directories)
#
#dont_scan_dirs ESP:/EFI/boot,EFI/Dell,EFI/memtest86

# Files that should NOT be included as EFI boot loaders (on the
# first line of the display). If you're using a boot loader that
# relies on support programs or drivers that are installed alongside
# the main binary or if you want to "blacklist" certain loaders by
# name rather than location, use this option. Note that this will
# NOT prevent certain binaries from showing up in the second-row
# set of tools. Most notably, various Secure Boot and recovery
# tools are present in this list, but may appear as second-row
# items.
# The file may be specified as a bare name (e.g., "notme.efi"), as
# a complete pathname (e.g., "/EFI/somedir/notme.efi"), or as a
# complete pathname with volume (e.g., "SOMEDISK:/EFI/somedir/notme.efi"
# or 2C17D5ED-850D-4F76-BA31-47A561740082:/EFI/somedir/notme.efi").
# OS tags hidden via the Delete or '-' key in the RefindPlus menu are
# added to this list, but stored in NVRAM.
# The default setting is shim.efi,shim-fedora.efi,shimx64.efi,PreLoader.efi,
# TextMode.efi,ebounce.efi,GraphicsConsole.efi,MokManager.efi,HashTool.efi,
# HashTool-signed.efi,bootmgr.efi,fb{arch}.efi
# (where "{arch}" is the architecture code, like "x64").
#
# If you want to keep these defaults but add to them, be sure to
# specify "+" as the first item in the new list; if you do not, then
# items from the default list are likely to appear.
#
# Inactive when commented out (Does not exclude additional files)
#
#dont_scan_files shim.efi,MokManager.efi

# Scan for Linux kernels that lack a ".efi" filename extension. This is
# useful for better integration with Linux distributions that provide
# kernels with EFI stub loaders but that do not give those kernels filenames
# that end in ".efi", particularly if the kernels are stored on a
# filesystem that the EFI can read. When active, this option causes all files
# in scanned directories with names that begin with "vmlinuz", "bzImage", or "kernel"
# to be included as loaders, even if they lack ".efi" extensions.
#
# Inactive when commented out (Only scans for kernels with ".efi" extensions)
#
#scan_all_linux_kernels

# Combine all Linux kernels in a given directory into a single entry.
# When so set, the kernel with the most recent time stamp will be launched
# by default, and its filename will appear in the entry's description.
# To launch other kernels, the user must press F2 or Insert; alternate
# kernels then appear as options on the sub-menu.
#
# Inactive when commented out (Kernels are not "folded" into a single menu entry).
#
#fold_linux_kernels

# Comma-delimited list of strings to treat as if they were numbers for the
# purpose of kernel version number detection. These strings are matched on a
# first-found basis; that is, if you want to treat both "linux-lts" and
# "linux" as version strings, they MUST be specified as "linux-lts,linux",
# since if you specify it the other way, both vmlinuz-linux and
# vmlinuz-linux-lts will return with "linux" as the "version string," which
# is not what you'd want. Also, if the kernel or initrd file includes both a
# specified string and digits, the "version string" includes both. For
# instance, "vmlinuz-linux-4.8" would yield a version string of "linux-4.8".
# This option is intended for Arch and other distributions that do not include
# version numbers in their kernel filenames, but may provide other uniquely
# identifying strings for multiple kernels. If this feature causes problems
# (say, if your kernel filename includes "linux" but the initrd filename
# does not), be sure this is set to an empty string
# (extra_kernel_version_strings "") or comment out the option to disable it.
#
# Inactive when commented out (No extra version strings are used)
#
#extra_kernel_version_strings linux-lts,linux

# Set the maximum number of tags that can be displayed on the screen at
# any time. If more loaders are discovered than this value, RefindPlus shows
# a subset in a scrolling list. If this value is set too high for the
# screen to handle, it is reduced to the value that the screen can manage.
# If this value is set to 0 it is adjusted to a number the screen can handle.
#
# Adjusts displayed boot loaders to screen width when commented out
#
#max_tags 0

# Set the default menu selection.  The available arguments match the
# keyboard accelerators available within RefindPlus.  You may select the
# default loader using:
#  - A digit between 1 and 9, in which case the Nth loader in the menu
#    will be the default.
#  - A "+" symbol at the start of the string, which refers to the most
#    recently booted loader.
#  - Any substring that corresponds to a portion of the loader's title
#    (usually the OS's name, boot loader's path, or a volume or
#    filesystem title).
# You may also specify multiple selectors by separating them with commas
# and enclosing the list in quotes. (The "+" option is only meaningful in
# this context.)
# If you follow the selector(s) with two times, in 24-hour format, the
# default will apply only between those times. The times are in the
# motherboard's time standard, whether that is UTC or local time, so if
# you use UTC, you'll need to adjust this from local time manually.
# Times may span midnight as in "23:30 00:30", which applies to 11:30 PM
# to 12:30 AM. You may specify multiple default_selection lines, in which
# case the last one to match takes precedence. Thus, you can set a main
# option without a time followed by one or more that include times to
# set different defaults for different times of day.
#
# Boots the previously booted loader when commented out
#
#default_selection 1
#default_selection Microsoft
#default_selection "+,bzImage,vmlinuz"
#default_selection Maintenance 23:30 2:00
#default_selection "Maintenance,Mac OS" 1:00 2:30

# Enable VMX bit and lock the CPU MSR if unlocked.
# On some Intel Apple computers, the firmware does not lock the MSR 0x3A.
# The symptom on Windows is Hyper-V not working even if the CPU
# meets the minimum requirements (HW assisted virtualization and SLAT)
# DO NOT SET THIS EXCEPT ON INTEL CPUs THAT SUPPORT VMX! See
# http://www.thomas-krenn.com/en/wiki/Activating_the_Intel_VT_Virtualization_Feature
# for more on this subject.
#
# Inactive when commented out (Does not try to enable and lock the MSR)
#
#enable_and_lock_vmx

# Tell a Mac's EFI that Mac OS is about to be launched, even when it is not.
# This option causes some Macs to initialize their hardware differently than
# when a third-party OS is launched normally. In some cases (particularly on
# Macs with multiple video cards), using this option can cause hardware to
# work that would not otherwise work. On the other hand, using this option
# when it is not necessary can cause hardware (such as keyboards and mice) to
# become inaccessible. Therefore, you should not enable this option if your
# non-Apple operating systems work correctly; enable it only if you have problems
# with some hardware devices. When needed, a value of "10.9" usually works, but
# you can experiment with other values. This feature has no effect on
# non-Apple computers.
#
# Inactive when commented out (No Mac OS spoofing is done)
#
#spoof_osx_version 10.9

# Sample manual configuration stanzas. Each begins with the "menuentry"
# keyword followed by a name that is to appear in the menu (use quotes
# if you want the name to contain a space) and an open curly brace
# ("{"). Each entry ends with a close curly brace ("}"). Common
# keywords within each stanza include:
#
#  volume    - identifies the filesystem from which subsequent files
#              are loaded. You can specify the volume by filesystem
#              label, by partition label, or by partition GUID number
#              (but NOT yet by filesystem UUID number).
#  loader    - identifies the boot loader file
#  initrd    - Specifies an initial RAM disk file
#  icon      - specifies a custom boot loader icon
#  ostype    - OS type code to determine boot options available by
#              pressing Insert. Valid values are "MacOS", "Linux",
#              "Windows", and "XOM". Case-sensitive.
#  graphics  - set to "on" to enable graphics-mode boot (useful
#              mainly for MacOS) or "off" for text-mode boot.
#              The default setting is auto-detected from the
#              loader filename.
#  options   - sets options to be passed to the boot loader; use
#              quotes if more than one option should be passed or
#              if any options use characters that might be changed
#              by RefindPlus parsing procedures (=, /, #, or tab).
#  disabled  - use alone or set to "yes" to disable this entry.
#
# Note that you can use either DOS/Windows/EFI-style backslashes (\)
# or Unix-style forward slashes (/) as directory separators. Either
# way, all file references are on the ESP from which RefindPlus was
# launched.
# Use of quotes around parameters causes them to be interpreted as
# one keyword, and for parsing of special characters (spaces, =, /,
# and #) to be disabled. This is useful mainly with the "options"
# keyword. Use of quotes around parameters that specify filenames is
# permissible, but you must then use backslashes instead of slashes,
# except when you must pass a forward slash to the loader, as when
# passing a root= option to a Linux kernel.

# Below are several sample boot stanzas. All are disabled by default.
# Find one similar to what you need, copy it, remove the "disabled" line,
# and adjust the entries to suit your needs.

# A sample entry for a Linux 3.13 kernel with EFI boot stub support
# on a partition with a GUID of 904404F8-B481-440C-A1E3-11A5A954E601.
# This entry includes Linux-specific boot options and specification
# of an initial RAM disk. Note uses of Linux-style forward slashes.
# Also note that a leading slash is optional in file specifications.
menuentry Linux {
    icon EFI/refind/icons/os_linux.png
    volume 904404F8-B481-440C-A1E3-11A5A954E601
    loader bzImage-3.3.0-rc7
    initrd initrd-3.3.0.img
    options "ro root=UUID=5f96cafa-e0a7-4057-b18f-fa709db5b837"
    disabled
}

# Below is a more complex Linux example, specifically for Arch Linux.
# This example MUST be modified for your specific installation; if nothing
# else, the PARTUUID code must be changed for your disk. Because Arch Linux
# does not include version numbers in its kernel and initrd filenames, you
# may need to use manual boot stanzas when using fallback initrds or
# multiple kernels with Arch. This example is modified from one in the Arch
# wiki page on rEFInd (https://wiki.archlinux.org/index.php/rEFInd).
menuentry "Arch Linux" {
    icon     /EFI/refind/icons/os_arch.png
    volume   "Arch Linux"
    loader   /boot/vmlinuz-linux
    initrd   /boot/initramfs-linux.img
    options  "root=PARTUUID=5028fa50-0079-4c40-b240-abfaf28693ea rw add_efi_memmap"
    submenuentry "Boot using fallback initramfs" {
        initrd /boot/initramfs-linux-fallback.img
    }
    submenuentry "Boot to terminal" {
        add_options "systemd.unit=multi-user.target"
    }
    disabled
}

# A sample entry for loading Ubuntu using its standard name for
# its GRUB 2 boot loader. Note uses of Linux-style forward slashes
menuentry Ubuntu {
    loader /EFI/ubuntu/grubx64.efi
    icon /EFI/refind/icons/os_linux.png
    disabled
}

# A minimal ELILO entry, which probably offers nothing that
# auto-detection cannot accomplish.
menuentry "ELILO" {
    loader \EFI\elilo\elilo.efi
    disabled
}

# Like the ELILO entry, this one offers nothing that auto-detection
# cannot do; but you might use it if you want to disable auto-detection
# but still boot Windows....
menuentry "Windows 7" {
    loader \EFI\Microsoft\Boot\bootmgfw.efi
    disabled
}

# EFI shells are programs just like boot loaders, and can be
# launched in the same way. You can pass a shell the name of a
# script that it is to run on the "options" line. The script
# could initialize hardware and then launch an OS, or it could
# do something entirely different.
menuentry "Windows via shell script" {
    icon \EFI\refind\icons\os_win.png
    loader \EFI\tools\shell.efi
    options "fs0:\EFI\tools\launch_windows.nsh"
    disabled
}

# Mac OS is normally detected and run automatically; however,
# if you want to do something unusual, a manual boot stanza may
# be the way to do it. This one does nothing very unusual, but
# it may serve as a starting point. Note that you'll almost
# certainly need to change the "volume" line for this example
# to work.
menuentry "My Mac OS" {
    icon \EFI\refind\icons\os_mac.png
    volume "Mac OS boot"
    loader \System\Library\CoreServices\boot.efi
    disabled
}

# Include a secondary configuration file within this one. This secondary
# file is loaded as if its options appeared at the point of the "include"
# option itself, so if you want to override a setting in the main file,
# the secondary file must be referenced AFTER the setting you want to
# override. Note that the secondary file may NOT load a tertiary file.
#
#include manual.conf
